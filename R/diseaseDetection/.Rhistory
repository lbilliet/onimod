table(theseAlice$`Tranche horaire`)
theseAlice <- read_excel("../theseLATA3.xlsx")
#theseAlice$Heure<-as.Date(theseAlice$Heure, format = "%h:%m:%s")
theseAlice$Date<-as.Date(theseAlice$Date, format = "%d.%m.%Y")
theseAlice <- read_excel("../theseLATA3.xlsx")
library("lubridate")
library("magrittr")
library("readr")
library("readxl")
library("lattice")
theseAlice <- read_excel("../theseLATA3.xlsx")
table(theseAlice$`Tranche horaire`)
theseAlice <- read_excel("../theseLATA3.xlsx")
theseAlice <- read_excel("../theseLATA3.xlsx")
setwd(dirname(file.choose()))
# install.packages("jsonlite")
library(udpipe)
# install.packages("jsonlite")
install.packages("udpipe")
# install.packages("jsonlite")
# install.packages("udpipe")
library(udpipe)
# drugsCount$IDF <- - log (drugsCount$frequency / Ndocs)
drugsCount$BM25 <- document_term_frequencies(drugsCount)
library(udpipe)
library(elastic)
library(httr)
library(quanteda)
library(dplyr)
library(tidytext)
source("elasticSearchFunction.R")
###### Connection to elasticSearch
elastic::connect(es_host = "172.16.90.22")
host <- "172.16.90.22"
port = "9200"
index <- "sentencect"
type <- "sentencect"
# elastic::index_delete(index)
# elastic::index_delete("sentencect")
# elastic::index_exists(index)
##
# http://172.16.90.22:9200/sentence/_stats for Number of docs
Ndocs <- 1068711 ## first index
Ndocs <- 1046480
## drugs labels :
romedi <- read.table("romediTermsNormalizedINPINBN.csv",sep="\t",header = F,comment.char = "",quote="", encoding = "UTF-8")
colnames(romedi) <- c("uri","type","libelle","normal")
romedi$uri <- gsub("http://www.romedi.fr/romedi#","",romedi$uri)
#### drugs count :
drugsCount <- getDrugsCount(host = host, port = port, index = index, type = type)
# drugsCount$IDF <- - log (drugsCount$frequency / Ndocs)
drugsCount$BM25 <- document_term_frequencies(drugsCount)
elastic::connect(es_host = "172.16.90.22")
host <- "172.16.90.22"
port = "9200"
index <- "sentencect"
type <- "sentencect"
# elastic::index_delete(index)
# elastic::index_delete("sentencect")
# elastic::index_exists(index)
##
# http://172.16.90.22:9200/sentence/_stats for Number of docs
Ndocs <- 1068711 ## first index
Ndocs <- 1046480
## drugs labels :
romedi <- read.table("romediTermsNormalizedINPINBN.csv",sep="\t",header = F,comment.char = "",quote="", encoding = "UTF-8")
colnames(romedi) <- c("uri","type","libelle","normal")
romedi$uri <- gsub("http://www.romedi.fr/romedi#","",romedi$uri)
#### drugs count :
drugsCount <- getDrugsCount(host = host, port = port, index = index, type = type)
View(drugsCount)
View(romedi)
getwd()
library(xtable)
library(stringr)
source("0.chargement.R")
source("usefulFunctions.R")
load("indicationFoundbyDrugURI.rdata")
boxplot(indicationFoundbyDrugURI$position)
boxplot(indicationFoundbyDrugURI$sumTF)
fivenum(indicationFoundbyDrugURI$position)
fivenum(indicationFoundbyDrugURI$sumTF)
signal <- subset (indicationFoundbyDrugURI, position > 5)
## add the label :
colnames(signal)
signal <- merge (signal, romedi, by.x = "drugURI", by.y="uri")
signal <- signal[order(signal$position),]
##
drugsCount30 <- subset (drugsCount, frequency>30)
bool <- signal$drugURI %in% drugsCount30$uri
sum(bool)
signal2 <- subset(signal, bool)
###### see to associated disease :
log(3503)
######## pick a label :
#test rch ATU / RTU
AtuRtu <- read.csv2("data/ATU_RTU.csv",header = T,encoding = "UTF-8") #si besoin de load, mais normalement dans source "0.chargement.R"
##############export DF LaTEX
# diseasesByDrugOrd<-diseasesByDrug[with(diseasesByDrug, order(diseasesByDrug$TFIDF)),]
diseasesByDrugOrd<-diseasesByDrug[,c(1,8,7,2,3,4,5,6)]
# diseasesByDrugOrd<-diseasesByDrugOrd[with(diseasesByDrugOrd, order(diseasesByDrugOrd$TFIDF)),]
print(xtable(diseaseCount[1:15,]), include.rownames=FALSE)
print(xtable(diseaseDetected[1:15,]), include.rownames=FALSE)
print(xtable(diseaseDetectedDistinct[1:15,]), include.rownames=FALSE)
print(xtable(diseaseByDrug[1:15,c(1,8,7,4,6)]), include.rownames=FALSE)
print(xtable(diseasesByDrug[1:15,c(1,8,7,4,6)]), include.rownames=FALSE)
print(xtable(diseasesByDrugOrd[1:15,]), include.rownames=FALSE)
print(xtable(drugsCount[1:15,]), include.rownames=FALSE)
print(xtable(drugsCount30[1:15,]), include.rownames=FALSE)
print(xtable(indicationFoundbyDrugURI[1:15,]), include.rownames=FALSE)
print(xtable(romedi[1:15,]), include.rownames=FALSE)
print(xtable(signal[1:15,]), include.rownames=FALSE)
print(xtable(signal2[1:15,]), include.rownames=FALSE)
print(xtable(indications[c(11,12,17,18,19,20,21,22),c(1,3,4)]), include.rownames=FALSE)
# => Theralene est indique dans les Ã©pisodes d'insomnies !
getPostsMedoc <- function(medoc, numCode = 1){
results <- getURIbyLabel(medoc,romedi)
diseaseByDrug <- results$diseaseByDrug
drugURIs <- results$drugURI
# drugURI
diseaseByDrug$candidateTerm[1:14]
code <- diseaseByDrug$code[numCode] ## 4 => numero du terme
code
i <- 1
posts <- NULL
while (is.null(posts) & i < (length(drugURIs) + 1)){
# print(paste("Valeur de i (pour drugURI):",i, sep = " "))
drugURI <- drugURIs[i]
posts <- getDrugAndDisease(drugURI, code,host = host,
port = port,index = index,type = type)
i <- i + 1
}
print(diseaseByDrug$candidateTerm[1:10])
bool_ATU<-unique(str_detect(as.character(unlist(AtuRtu)), fixed(paste("\"",medoc,"\""), ignore_case = TRUE )))
print(paste("ATU/RTU ?", bool_ATU, sep=" "))
posts$sentence
}
getPostsMedoc("rivotril", numCode = 1 )
# medoc<-"alpelisib"
# unlistAtuRtu <-  unlist(AtuRtu)
# any(grepl(medoc,unlistAtuRtu,ignore.case = T))
#
# unique(str_detect(as.character(unlist(AtuRtu)), fixed(paste("\"",medoc,"\"", sep = ""), ignore_case = TRUE )))
# unique(str_detect(as.character(unlist(AtuRtu)), fixed("alpelisib", ignore_case = TRUE )))#ALPELISIB
# ignore.case(medoc)
### all the terms of a code :
voir <- subset(diseaseDetectedDistinct, code == "M701")
voir[1:20,]
source("0.chargement.R")
source("0.chargement.R")
source("elasticSearchFunction.R")
elastic::connect(es_host = "172.16.90.22")
host <- "172.16.90.22"
port = "9200"
index <- "sentencect"
type <- "sentencect"
# elastic::index_delete(index)
# elastic::index_delete("sentencect")
# elastic::index_exists(index)
##
# http://172.16.90.22:9200/sentence/_stats for Number of docs
Ndocs <- 1068711 ## first index
Ndocs <- 1046480
## drugs labels :
romedi <- read.table("romediTermsNormalizedINPINBN.csv",sep="\t",header = F,comment.char = "",quote="", encoding = "UTF-8")
colnames(romedi) <- c("uri","type","libelle","normalized")
romedi$uri <- gsub("http://www.romedi.fr/romedi#","",romedi$uri)
#### drugs count :
drugsCount <- getDrugsCount(host = host, port = port, index = index, type = type)
# initialement => IDF utilisé, voire perf avec weight BM25 Okapi
drugsCount$IDF <- - log (drugsCount$frequency / Ndocs)
# drugsCount$IDF25 <- - log (drugsCount$frequency / Ndocs)
# drugsCount$BM25 <-
### disease count :
diseaseCount <- getDiseasesCount(host = host, port = port, index = index, type = type)
## keep only ICD10 with 3 codes
diseaseCount <- diseaseCount %>% group_by(code) %>% mutate (frequencyCode = sum(frequencyCode))
# initialement => IDF utilisé, voire perf avec weight BM25 Okapi
diseaseCount$IDF <- - log (diseaseCount$frequencyCode / Ndocs)
# diseaseCount$IDF25 <- - log (diseaseCount$frequencyCode / Ndocs)
diseaseCount <- unique(diseaseCount)
########### disease labels
### as a code can have multiple labels, we take the more frequent label in the data :
diseaseDetected <- read.table("diseasesDetected.csv",sep="\t",comment.char = "", encoding = "UTF-8")
colnames(diseaseDetected) <- c("candidateTerm","code")
diseaseDetectedDistinct <- unique(diseaseDetected)
## one label per code:
diseaseDetected <- diseaseDetected %>% group_by(code) %>% mutate(n = row_number())
diseaseDetected <- subset (diseaseDetected, n == 1)
diseaseDetected$n <- NULL
# code 3
diseaseDetected$code3 <- substr(x = diseaseDetected$code, 1,3)
## test
drugURI <- "BNmvjqk095uj1aq6ognukn9npgm4rltqi8"
diseasesByDrug <- getDiseasesByDrug(drugURI = drugURI,drugsCount = drugsCount, diseaseCount = diseaseCount, diseaseDetected = diseaseDetected,
host = host,port = port,index = index, type = type)
#############  Comparison with a list of ICD10 indications by Theriaque
indications  <- read.table("theriaque_indication_cim10.csv",sep=",", encoding = "UTF-8")
colnames(indications) <- c("denom","indication","code","indicationLong")
############ load df infos ATU/RTU
# AtuRtu <- read.table("data/ATU_RTU.csv",sep=";",header = F,comment.char = "",quote="", encoding = "UTF-8")
AtuRtu <- read.csv("data/ATU_RTU.csv",header = F,encoding = "UTF-8")
source("0.chargement.R")
source("0.chargement.R")
source("usefulFunctions.R")
load("indicationFoundbyDrugURI.rdata")
signal <- subset (indicationFoundbyDrugURI, position > 5)
## add the label :
colnames(signal)
signal <- merge (signal, romedi, by.x = "drugURI", by.y="uri")
signal <- signal[order(signal$position),]
##
drugsCount30 <- subset (drugsCount, frequency>30)
bool <- signal$drugURI %in% drugsCount30$uri
sum(bool)
signal2 <- subset(signal, bool)
###### see to associated disease :
log(3503)
######## pick a label :
#test rch ATU / RTU
AtuRtu <- read.csv2("data/ATU_RTU.csv",header = T,encoding = "UTF-8") #si besoin de load, mais normalement dans source "0.chargement.R"
##############export DF LaTEX
# diseasesByDrugOrd<-diseasesByDrug[with(diseasesByDrug, order(diseasesByDrug$TFIDF)),]
diseasesByDrugOrd<-diseasesByDrug[,c(1,8,7,2,3,4,5,6)]
print(xtable(diseaseCount[1:15,]), include.rownames=FALSE)
print(xtable(diseaseDetected[1:15,]), include.rownames=FALSE)
print(xtable(diseaseDetectedDistinct[1:15,]), include.rownames=FALSE)
print(xtable(diseaseByDrug[1:15,c(1,8,7,4,6)]), include.rownames=FALSE)
print(xtable(diseasesByDrug[1:15,c(1,8,7,4,6)]), include.rownames=FALSE)
print(xtable(diseasesByDrugOrd[1:15,]), include.rownames=FALSE)
print(xtable(drugsCount[1:15,]), include.rownames=FALSE)
print(xtable(drugsCount30[1:15,]), include.rownames=FALSE)
print(xtable(indicationFoundbyDrugURI[1:15,]), include.rownames=FALSE)
print(xtable(romedi[1:15,]), include.rownames=FALSE)
print(xtable(signal[1:15,]), include.rownames=FALSE)
print(xtable(signal2[1:15,]), include.rownames=FALSE)
print(xtable(indications[c(11,12,17,18,19,20,21,22),c(1,3,4)]), include.rownames=FALSE)
# => Theralene est indique dans les Ã©pisodes d'insomnies !
getPostsMedoc <- function(medoc, numCode = 1){
results <- getURIbyLabel(medoc,romedi)
diseaseByDrug <- results$diseaseByDrug
drugURIs <- results$drugURI
# drugURI
diseaseByDrug$candidateTerm[1:14]
code <- diseaseByDrug$code[numCode] ## 4 => numero du terme
code
i <- 1
posts <- NULL
while (is.null(posts) & i < (length(drugURIs) + 1)){
# print(paste("Valeur de i (pour drugURI):",i, sep = " "))
drugURI <- drugURIs[i]
posts <- getDrugAndDisease(drugURI, code,host = host,
port = port,index = index,type = type)
i <- i + 1
}
print(diseaseByDrug$candidateTerm[1:10])
bool_ATU<-unique(str_detect(as.character(unlist(AtuRtu)), fixed(paste("\"",medoc,"\""), ignore_case = TRUE )))
print(paste("ATU/RTU ?", bool_ATU, sep=" "))
posts$sentence
}
getPostsMedoc("rivotril", numCode = 1 )
# medoc<-"alpelisib"
# unlistAtuRtu <-  unlist(AtuRtu)
# any(grepl(medoc,unlistAtuRtu,ignore.case = T))
#
# unique(str_detect(as.character(unlist(AtuRtu)), fixed(paste("\"",medoc,"\"", sep = ""), ignore_case = TRUE )))
# unique(str_detect(as.character(unlist(AtuRtu)), fixed("alpelisib", ignore_case = TRUE )))#ALPELISIB
# ignore.case(medoc)
### all the terms of a code :
voir <- subset(diseaseDetectedDistinct, code == "M701")
voir[1:20,]
View(AtuRtu)
View(diseaseCount)
source("0.chargement.R")
View(AtuRtu)
View(diseaseCount)
View(diseaseDetected)
View(diseaseDetectedDistinct)
View(diseasesByDrug)
View(drugsCount)
source("elasticSearchFunction.R")
###### Connection to elasticSearch
elastic::connect(es_host = "172.16.90.22")
host <- "172.16.90.22"
port = "9200"
index <- "sentencect"
type <- "sentencect"
Ndocs <- 1046480
## drugs labels :
romedi <- read.table("romediTermsNormalizedINPINBN.csv",sep="\t",header = F,comment.char = "",quote="", encoding = "UTF-8")
colnames(romedi) <- c("uri","type","libelle","normalized")
romedi$uri <- gsub("http://www.romedi.fr/romedi#","",romedi$uri)
#### drugs count :
drugsCount <- getDrugsCount(host = host, port = port, index = index, type = type)
View(drugsCount)
# initialement => IDF utilisé, voire perf avec weight BM25 Okapi
drugsCount$IDF <- - log (drugsCount$frequency / Ndocs)
### disease count :
diseaseCount <- getDiseasesCount(host = host, port = port, index = index, type = type)
View(diseaseCount)
## keep only ICD10 with 3 codes
diseaseCount <- diseaseCount %>% group_by(code) %>% mutate (frequencyCode = sum(frequencyCode))
View(diseaseCount)
# initialement => IDF utilisé, voire perf avec weight BM25 Okapi
diseaseCount$IDF <- - log (diseaseCount$frequencyCode / Ndocs)
View(diseaseCount)
# diseaseCount$IDF25 <- - log (diseaseCount$frequencyCode / Ndocs)
diseaseCount <- unique(diseaseCount)
########### disease labels
### as a code can have multiple labels, we take the more frequent label in the data :
diseaseDetected <- read.table("diseasesDetected.csv",sep="\t",comment.char = "", encoding = "UTF-8")
View(diseaseDetected)
colnames(diseaseDetected) <- c("candidateTerm","code")
diseaseDetectedDistinct <- unique(diseaseDetected)
## one label per code:
diseaseDetected <- diseaseDetected %>% group_by(code) %>% mutate(n = row_number())
diseaseDetected <- subset (diseaseDetected, n == 1)
diseaseDetected$n <- NULL
# code 3
diseaseDetected$code3 <- substr(x = diseaseDetected$code, 1,3)
View(diseaseDetected)
View(diseaseDetected)
## test
drugURI <- "BNmvjqk095uj1aq6ognukn9npgm4rltqi8"
# code 3
diseaseDetected$code3 <- substr(x = diseaseDetected$code, 1,3)
View(drugsCount)
View(diseaseCount)
View(diseaseDetected)
View(diseaseDetectedDistinct)
View(drugsCount)
diseasesByDrug <- getDiseasesByDrug(drugURI = drugURI,drugsCount = drugsCount, diseaseCount = diseaseCount, diseaseDetected = diseaseDetected,
host = host,port = port,index = index, type = type)
View(diseasesByDrug)
View(getDiseasesByDrug)

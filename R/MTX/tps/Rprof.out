sample.interval=20000
".Call" "tdm" "TermDocumentMatrix.SimpleCorpus" "TermDocumentMatrix" "t" "DocumentTermMatrix" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
sample.interval=20000
"file" "read.table" "read.csv2" 
".Call" "tdm" "TermDocumentMatrix.SimpleCorpus" "TermDocumentMatrix" 
"dimnames<-.simple_triplet_matrix" "dimnames<-" "dimnames<-" ".TermDocumentMatrix" "TermDocumentMatrix.SimpleCorpus" "TermDocumentMatrix" 
"dimnames<-.simple_triplet_matrix" "dimnames<-" "dimnames<-" ".TermDocumentMatrix" "TermDocumentMatrix.SimpleCorpus" "TermDocumentMatrix" 
".External2" "write.table" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
sample.interval=20000
"checkSkipLoopCntxtList" "checkSkipLoopCntxt" "checkSkipLoopCntxtList" "checkSkipLoopCntxt" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"sort.list" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "write.table" 
"%in%" "getAssignedVar" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"%in%" "findCenvVar" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"parent.env" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"cb$putcode" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"exists" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"cb$putcode" "cmpConstArg" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustcomp" 
"single03_adjrand" "mclustsingle" "mclustcomp" 
"make.callContext" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpSubassignDispatch" "h" "trySetterInline" "cmpSetterCall" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustsingle" "mclustcomp" 
"tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustsingle" "mclustcomp" 
"single01_chisq" "mclustsingle" "mclustcomp" 
sample.interval=20000
"nchar" "maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"options" "%in%" "getOption" "file" "read.table" "read.csv2" 
"nchar" "maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stop" "library" 
"cb$putconst" "cmpSym" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "f" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" ".rs.callAs" "install.packages" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
sample.interval=20000
"fun" "lazyLoadDBexec" "lazyLoad" "eval" "eval" "eval" "eval" "eval.parent" "local" "eval" "eval" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"as.list" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"as.list.default" "as.list" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "FUN" "lapply" "unquote" "bquote" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"identical" "f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"as.list.default" "as.list" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"as.list" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"as.symbol" "identical" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"identical" "f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"is.function" "match.fun" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"identical" "f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"f" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "modify_lang" "f" "isTRUE" "extract_lang" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "FUN" "lapply" "recurse" "modify_lang" "f" "isTRUE" "extract_lang" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"identical" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.recordTraceback" "<Anonymous>" "stop" "library" 
"unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.recordTraceback" "<Anonymous>" "stop" "library" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.recordTraceback" "<Anonymous>" "stop" "library" 
"$" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.recordTraceback" "<Anonymous>" "stop" "library" 
"gsub" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"readRDS" "FUN" "lapply" "find.package" "system.file" "library" ".getRequiredPackages2" "library" 
"asNamespace" "getExportedValue" "::" ".registerS3method" "registerS3methods" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"lazyLoadDBfetch" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "FUN" "lapply" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"FUN" "lapply" "unlist" "methods:::.getGenerics" "unique" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"namespaceImportFrom" "namespaceImport" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".getGeneric" "getGeneric" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"is" "dispatchIsInternal" "cacheGenericsMetaData" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"%in%" ".findInheritedMethods" "<Anonymous>" "body<-" "makeGeneric" "implicitGeneric" ".genericOrImplicit" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lazyLoadDBfetch" ".mergeMethodsTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"gsub" "methods:::.getGenerics" "unique" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"close" "readRDS" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"parse" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "namespaceImport" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "namespaceImport" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"dynGet" "loadingNamespaceInfo" "eval" "eval" "eval" "eval" "eval.parent" "local" "eval" "eval" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "namespaceImport" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"gettext" "namespaceImportFrom" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lazyLoadDBfetch" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".cacheGenericTable" ".cacheGeneric" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"cacheGenericsMetaData" "Recall" "cacheGenericsMetaData" "Recall" "cacheGenericsMetaData" "methods::cacheMetaData" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"unique.default" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustsingle" "mclustcomp" 
"%in%" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "cmpSubassignDispatch" "h" "trySetterInline" "cmpSetterCall" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustsingle" "mclustcomp" 
"constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mclustsingle" "mclustcomp" 
"single01_chisq" "mclustsingle" "mclustcomp" 
"factor" "as.data.frame.character" "as.data.frame" "data.frame" "mclustcomp" 

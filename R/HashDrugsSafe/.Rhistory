body <- paste0(
'
{
"query":{
"terms":{
"codeDisease":[',codereq,']
}
},
"aggs": {
"uri": {
"terms": {
"field": "ct",
"size": 5000
}
}
}
}
')
resultsJson <- sendESquery(host, port, index, type, body)
diseaseDrugs <- resultsJson$aggregations$uri$buckets
resultsJson
diseaseDrugs <- resultsJson$aggregations$uri$buckets
diseaseDrugs
print("test")
if (length(diseaseDrugs) == 0){
print("test")
}
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
temp <- getCTByDisease(code = code, codes4 = codes4, diseaseCount = diseaseCount, ctCount,diseaseDetected = diseaseDetected,
host = host,port = port,index = index,type = type)
temp
temp <- subset (temp, select=c("ct","TFIDF"))
temp
### DocumentTermMatrices of diseases :
dfDisease <- NULL
code <- "O47"
getCodes4 = function(code3){
bool <- diseaseDetected$code3 == code3
codes4 <- diseaseDetected$code[bool]
codes4 <- unique(codes4)
return(codes4)
}
dfDisease
for (code in diseaseCount$code){
print(code)
print(which(diseaseCount$code == code))
codes4 <- getCodes4(code)
if (length(codes4) == 0){
cat("disease not detected for code ", code, "\n")
next
}
temp <- getCTByDisease(code = code, codes4 = codes4, diseaseCount = diseaseCount, ctCount,diseaseDetected = diseaseDetected,
host = host,port = port,index = index,type = type)
if (nrow(temp) == 0){
next
}
temp <- subset (temp, select=c("ct","TFIDF"))
temp$document <- code
dfDisease <- rbind(dfDisease, temp)
}
warnings()
codereq <- paste0("\"",codes4,"\"")
codereq <- paste0(codereq, collapse=",")
body <- paste0(
'
{
"query":{
"terms":{
"codeDisease":[',codereq,']
}
},
"aggs": {
"uri": {
"terms": {
"field": "ct",
"size": 5000
}
}
}
}
')
resultsJson <- sendESquery(host, port, index, type, body)
diseaseDrugs <- resultsJson$aggregations$uri$buckets
if (length(diseaseDrugs) == 0){
return(data.frame(ct=character(), TFIDF=numeric()))
}
colnames(diseaseDrugs) <- c("ct","frequencyCTCode")
## adding frequency of the ICD10 code to have the code frequency for this disease (TF ) in this context
bool <- diseaseCount$code %in% code
freqCode <- diseaseCount$frequencyCode[bool]
freqCode <- sum(freqCode)
diseaseDrugs$freqCode <- freqCode
diseaseDrugs$TF <- diseaseDrugs$frequencyCTCode / diseaseDrugs$freqCode
### adding the IDF of the drug :
diseaseDrugs <- merge (diseaseDrugs, ctCount, by="ct")
diseaseDrugs$TFIDF <- diseaseDrugs$TF * diseaseDrugs$IDF
diseaseDrugs <- diseaseDrugs[order(-diseaseDrugs$TFIDF),]
## remove lemmaTerms to detect the drug :
bool <- diseaseDetected$code3 %in% code
lemmaTerm <- diseaseDetected$candidateTerm[bool]
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
bool <- diseaseDrugs$ct %in% lemmaTerm
sum(bool)
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
diseaseDrugs <- subset (diseaseDrugs, !bool)
bool <- diseaseDrugs$TF < 0.001
code
### DocumentTermMatrices of diseases :
dfDisease <- NULL
code <- "O47"
getCodes4 = function(code3){
bool <- diseaseDetected$code3 == code3
codes4 <- diseaseDetected$code[bool]
codes4 <- unique(codes4)
return(codes4)
}
for (code in diseaseCount$code){
print(code)
print(which(diseaseCount$code == code))
codes4 <- getCodes4(code)
if (length(codes4) == 0){
cat("disease not detected for code ", code, "\n")
next
}
temp <- getCTByDisease(code = code, codes4 = codes4, diseaseCount = diseaseCount, ctCount,diseaseDetected = diseaseDetected,
host = host,port = port,index = index,type = type)
if (nrow(temp) == 0){
next
}
temp <- subset (temp, select=c("ct","TFIDF"))
temp$document <- code
dfDisease <- rbind(dfDisease, temp)
}
View(dfDisease)
dtmDisease <- dfDisease %>%
cast_dtm(document, ct, TFIDF,weighting = function(x) {return (x)})
dtmDisease
dfmDisease <- quanteda::as.dfm(dtmDisease)
dfm
quanteda::textstat_simil(dfm)
quanteda::textstat_simil(dfmDisease)
voir <- quanteda::textstat_simil(dfmDisease)
str(voir)
max(voir)
which(voir==max(voir))
voir
414^2
414^2/2
voir[1,1]
voir[1]
dfmDisease
voir[1]
names(voir)
Labels(voir)
attr(voir,"Labels")
attr(voir,"Labels")[1]
length(voir)
voir
matrice <- as.matrix(voir)
dim(matrice)
matrice[1,1]
matrice
max(matrice[1,])
diag(matrice) <- 0
max(matrice[1,])
which(max(matrice[1,]))
which(matrice[1,] == max(matrice[1,]))
voir <- subset (diseaseDetected, code == "Z73")
voir <- subset (diseaseDetected, code3 == "Z73")
View(voir)
save(dfDisease, "dfDisease.rdata")
save(dfDisease, file = "dfDisease.rdata")
View(drugsCount)
dfDrug <- NULL
bool <- drugsCount$frequency < 30
sum(bool)
drugsCount <- subset (drugsCount, !bool)
drugURI <- drugsCount$uri[1]
drugURI
temp <- getCTByDrug(drugURI = drugURI,drugsCount = drugsCount, ctCount = ctCount, host = host,port = port,
index = index,type = type)
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
temp <- getCTByDrug(drugURI = drugURI,drugsCount = drugsCount, ctCount = ctCount, host = host,port = port,
index = index,type = type)
drugURI
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
temp <- getCTByDrug(drugURI = drugURI,drugsCount = drugsCount, ctCount = ctCount, host = host,port = port,
index = index,type = type)
View(temp)
## drugs labels :
romedi <- read.table("src/main/resources/romediTermsNormalizedINPINBN.csv",sep="\t",header = F,comment.char = "",quote="")
colnames(romedi) <- c("uri","type","libelle","normal")
romedi$uri <- gsub("http://www.romedi.fr/romedi#","",romedi$uri)
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
drugURIreq <- paste0("\"",drugURI,"\"")
drugURIreq <- paste0(drugURIreq, collapse=",")
body <- paste0(
'
{
"query":{
"terms":{
"codeDrug":[',drugURIreq,']
}
},
"aggs": {
"uri": {
"terms": {
"field": "ct",
"size": 5000
}
}
}
}
')
# cat(body)
resultsJson <- sendESquery(host, port, index, type, body)
drugsDisease <- resultsJson$aggregations$uri$buckets
colnames(drugsDisease) <- c("ct","frequencyCTDrug")
## adding frequency of the drugURI to have the code frequency for this drug (TF : ) in this context
bool <- drugsCount$uri %in% drugURI
freqURI <- sum(drugsCount$frequency[bool])
drugsDisease$frequencyDrug <- freqURI
drugsDisease$TF <- drugsDisease$frequencyCTDrug / drugsDisease$frequencyDrug
### adding the IDF of the ICD10 code :
drugsDisease <- merge (drugsDisease, ctCount, by="ct")
drugsDisease$TFIDF <- drugsDisease$TF * drugsDisease$IDF
bool <- drugsDisease$TF < 0.001
drugsDisease <- subset (drugsDisease, !bool)
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
bool <- romedi$uri %in% drugURI
normal <- romedi$normal[bool]
normal
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
drugsDisease <- subset (drugsDisease,!bool)
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
source('~/Documents/sebastien2leRetour/HashDrugsSafe/elasticSearchFunction.R')
dfDrug <- NULL
bool <- drugsCount$frequency < 30
sum(bool)
drugsCount <- subset (drugsCount, !bool)
drugURI <- drugsCount$uri[1]
temp <- getCTByDrug(drugURI = drugURI,drugsCount = drugsCount, ctCount = ctCount, romedi = romedi, host = host,port = port,
index = index,type = type)
View(temp)
View(temp)
temp <- subset (temp, select=c("ct","TFIDF"))
temp$document <- code
print(drugURI)
print(which(drugsCount$uri == drugURI))
dfDrug <- NULL
bool <- drugsCount$frequency < 30
sum(bool)
drugsCount <- subset (drugsCount, !bool)
drugURI <- drugsCount$uri[1]
for (drugURI in drugsCount$uri){
print(drugURI)
print(which(drugsCount$uri == drugURI))
temp <- getCTByDrug(drugURI = drugURI,drugsCount = drugsCount, ctCount = ctCount, romedi = romedi, host = host,port = port,
index = index,type = type)
if (nrow(temp) == 0){
next
}
temp <- subset (temp, select=c("ct","TFIDF"))
temp$document <- code
dfDrug <- rbind(dfDrug, temp)
}
View(dfDrug)
save(dfDrug, file = "dfDrug.rdata")
dfBoth <- rbind(dfDrug,dfDisease)
dtmBoth <- dfBoth %>%
cast_dtm(document, ct, TFIDF,weighting = function(x) {return (x)})
dfmBoth <- quanteda::as.dfm(dtmBoth)
dfmBoth
quanteda::textstat_simil(dfmBoth, selection=c("O95","R42"))
quanteda::textstat_simil(dfmBoth, selection=c("drugURI"))
quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
table(dfBoth$document)
dfDrug <- NULL
bool <- drugsCount$frequency < 30
sum(bool)
drugsCount <- subset (drugsCount, !bool)
drugURI <- drugsCount$uri[1]
for (drugURI in drugsCount$uri){
print(drugURI)
print(which(drugsCount$uri == drugURI))
temp <- getCTByDrug(drugURI = drugURI,drugsCount = drugsCount, ctCount = ctCount, romedi = romedi, host = host,port = port,
index = index,type = type)
if (nrow(temp) == 0){
next
}
temp <- subset (temp, select=c("ct","TFIDF"))
temp$document <- drugURI
dfDrug <- rbind(dfDrug, temp)
}
save(dfDrug, file = "dfDrug.rdata")
dfBoth <- rbind(dfDrug,dfDisease)
dtmBoth <- dfBoth %>%
cast_dtm(document, ct, TFIDF,weighting = function(x) {return (x)})
dfmBoth <- quanteda::as.dfm(dtmBoth)
drugURI <- "BNj58jf8aqth9bis3rfloeqf278re9l3u7"
quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
similarityDrugURI
rownames(similarityDrugURI)
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(voir$sim),]
voir <- voir[order(-voir$sim),]
View(voir)
voir2 <- merge (voir, romedi, by.x="uri",by.y="code",all.x=T)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
View(voir2)
View(diseaseDetected)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
View(voir3)
voir3 <- voir3[order(-voir3$sim),]
View(voir3)
View(voir3)
View(romedi)
getURIbyLabel = function(label){
bool <- romedi$normal == tolower(label)
drugURI <- romedi$uri[bool]
print(getIndication(label))
diseaseByDrug <- getDiseasesByDrug(drugURI = drugURI,drugsCount = drugsCount, diseaseCount = diseaseCount, diseaseDetected = diseaseDetected,
host = host,port = port,index = index, type = type)
return(list(diseaseByDrug=diseaseByDrug, drugURI=drugURI))
}
drugURI <- getURIbyLabel("DONORMYL")
bool <- romedi$normal == tolower("DONORMYL")
drugURI <- romedi$uri[bool]
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
View(voir)
bool <- romedi$normal == tolower("GAVISCON")
drugURI <- romedi$uri[bool]
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
View(voir)
bool <- romedi$normal == tolower("METHOTREXATE")
drugURI <- romedi$uri[bool]
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
drugURI
voirDrug <- function(drugURI[1]){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
drugURI[1]
bool
drugURI
drugURI <- "substance2345"
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
View(voir3)
bool <- romedi$normal == tolower("clomid")
drugURI <- romedi$uri[bool]
voirDrug <- function(drugURI[1]){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
View(voir)
View(drugsCount)
bool <- romedi$normal == tolower("bcg")
drugURI <- romedi$uri[bool]
drugURI
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
View(voir)
bool <- romedi$normal == tolower("PREVENAR")
drugURI <- romedi$uri[bool]
drugURI
voir <- voirDrug(drugURI)
View(voir)
bool <- romedi$normal == tolower("PRIMPERAN")
drugURI <- romedi$uri[bool]
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
View(voir)
bool <- romedi$normal == tolower("DIANE")
drugURI <- romedi$uri[bool]
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
View(voir)
bool <- romedi$normal == tolower("MINIDRIL")
drugURI <- romedi$uri[bool]
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
View(voir)
View(voir)
bool <- romedi$normal == tolower("RIVOTRIL")
drugURI <- romedi$uri[bool]
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
View(voir)
bool <- romedi$normal == tolower("STILNOX")
drugURI <- romedi$uri[bool]
voirDrug <- function(drugURI){
similarityDrugURI <- quanteda::textstat_simil(dfmBoth, selection=c(drugURI))
voir <- data.frame(code = rownames(similarityDrugURI), sim = as.numeric(similarityDrugURI))
voir <- voir[order(-voir$sim),]
table(dfBoth$document)
voir2 <- merge (voir, romedi, by.x="code",by.y="uri",all.x=T)
voir3 <- merge (voir2, diseaseDetected, by.x="code",by.y="code3",all.x=T)
voir3 <- voir3[order(-voir3$sim),]
return(voir3)
}
voir <- voirDrug(drugURI)
View(voir)
